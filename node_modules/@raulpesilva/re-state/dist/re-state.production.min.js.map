{"version":3,"file":"re-state.production.min.js","sources":["../src/core/batch.ts","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelperLoose.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../src/core/listener.ts","../src/core/observer.ts","../node_modules/@babel/runtime/helpers/esm/extends.js","../src/core/utils.ts","../src/core/store.ts","../src/react/store.ts","../src/react/createGetReState.ts","../src/react/useIsomorphicLayoutEffect.ts","../src/react/useReState.ts","../src/react/createReState.ts","../src/react/createReStateDispatch.ts","../src/react/createReStateSelect.ts","../src/react/utils.ts","../src/react/createReStateMethods.ts","../src/react/onReStateChange.ts","../src/react/useReStateSelector.ts"],"sourcesContent":["//inspired by react redux\nfunction defaultNoopBatch(callback: any) {\n  callback();\n}\n\nlet batch = defaultNoopBatch;\nexport const setBatch = (newBatch: any) => (batch = newBatch);\n\nexport const getBatch = () => batch;\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (it) return (it = it.call(o)).next.bind(it);\n\n  if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n    if (it) o = it;\n    var i = 0;\n    return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n  }\n\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import type { CompareStore, FnVoid } from './types';\n\nexport class Listener {\n  _listeners: CompareStore[] = [];\n\n  subscribe(listener: CompareStore): FnVoid {\n    this._listeners.push(listener);\n    return (): void => {\n      const index = this._listeners.indexOf(listener);\n      if (index < 0) return;\n      this._listeners[index] = this._listeners[this._listeners.length - 1] as CompareStore;\n      this._listeners.length--;\n    };\n  }\n\n  notify(prevStore: any, newStore: any): void {\n    for (const listener of this._listeners) {\n      listener(prevStore, newStore);\n    }\n  }\n}\n","import type { FnVoid, UniqueKey } from './types';\n\nexport class Observer {\n  _listeners = new Map();\n\n  subscribe(key: UniqueKey, listener: FnVoid): FnVoid {\n    if (this._listeners.has(key)) {\n      const listeners = this._listeners.get(key);\n      this._listeners.set(key, [...listeners, listener]);\n    }\n\n    if (!this._listeners.has(key)) {\n      this._listeners.set(key, [listener]);\n    }\n\n    return (): void => {\n      const listenersCopy = [...this._listeners.get(key)];\n      const index = this._listeners.get(key).indexOf(listener);\n      if (index < 0) return;\n      listenersCopy[index] = listenersCopy[listenersCopy.length - 1];\n      listenersCopy.length--;\n      this._listeners.set(key, listenersCopy);\n    };\n  }\n\n  notify(key: UniqueKey): void {\n    if (this._listeners.has(key)) {\n      for (const listener of this._listeners.get(key)) {\n        listener();\n      }\n    }\n  }\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/*eslint-disable no-self-compare */\nexport const isFunction = (data: any) => {\n  return typeof data === 'function';\n};\n","import type { UniqueKey, FnVoid } from './types';\nimport { isFunction } from './utils';\nimport { getBatch } from './batch';\nimport { Listener } from './listener';\nimport { Observer } from './observer';\n\nexport class Store {\n  __store = new Map<UniqueKey, unknown>();\n  __initial_store = new Map<UniqueKey, unknown>();\n  __observer = new Observer();\n  __listener = new Listener();\n\n  static convertStoreToObject(receivedStore: Map<UniqueKey, unknown>) {\n    const obj = Object.fromEntries(receivedStore.entries());\n    return obj;\n  }\n\n  static getStoreKeys(store: Map<UniqueKey, unknown>): UniqueKey[] {\n    return Array.from(store.keys());\n  }\n\n  get<S = undefined>(key: UniqueKey) {\n    return this.__store.get(key) as S;\n  }\n\n  getMany<T>(fn: (state: any) => T) {\n    if (!isFunction(fn)) {\n      throw new TypeError(\n        'to select a value in the store it is necessary to pass a function - ex: (store) => store.myKey'\n      );\n    }\n    const objectStore = Store.convertStoreToObject(this.__store);\n    return fn(objectStore);\n  }\n\n  _set<S>(key: UniqueKey, newValue: S): void {\n    const hasKey = this.__store.has(key);\n    if (typeof newValue === 'function') {\n      const prevValue = this.get<S>(key);\n      const value = newValue(prevValue);\n      this.__store.set(key, value);\n      if (!hasKey) this.setInitialValue(key, value);\n    } else {\n      this.__store.set(key, newValue);\n      if (!hasKey) this.setInitialValue(key, newValue);\n    }\n  }\n\n  set<S>(key: UniqueKey, newValue: S): void {\n    const { ...prevStore } = Store.convertStoreToObject(this.__store);\n\n    this._set(key, newValue);\n\n    const { ...newStore } = Store.convertStoreToObject(this.__store);\n\n    const batch = getBatch();\n    batch(() => {\n      this.notify(key);\n      this.notifySelectors(prevStore, newStore);\n    });\n  }\n\n  setWithoutNotify<S>(key: UniqueKey, newValue: S): void {\n    this._set(key, newValue);\n  }\n\n  setInitialValue<S>(key: UniqueKey, value: S) {\n    this.__initial_store.set(key, value);\n  }\n\n  has(key: UniqueKey) {\n    return this.__store.has(key);\n  }\n\n  notifySelectors(prevStore: any, newStore: any) {\n    this.__listener.notify(prevStore, newStore);\n  }\n\n  subscribeSelector(listener: (prevStore: any, newStore: any) => void) {\n    return this.__listener.subscribe(listener);\n  }\n\n  subscribe(key: UniqueKey, listener: FnVoid) {\n    return this.__observer.subscribe(key, listener);\n  }\n\n  notify(key: UniqueKey) {\n    this.__observer.notify(key);\n  }\n\n  reset() {\n    this.__store = new Map(this.__initial_store.entries());\n    const keys = Store.getStoreKeys(this.__store);\n    const batch = getBatch();\n    const newStore = Store.convertStoreToObject(this.__store);\n    batch(() => {\n      keys.forEach((key) => {\n        this.notify(key);\n        this.notifySelectors(undefined, newStore);\n      });\n    });\n  }\n}\n","import type { UniqueKey } from '../core';\nimport { Store } from '../core/store';\n\nexport const store = new Store();\nexport const resetReState = () => store.reset();\nexport const setReStateInitialValue = (key: UniqueKey, value: any) => store.setInitialValue(key, value);","import type { UniqueKey } from '../core/types';\nimport { store } from './store';\n\nexport function createGetReState<S>(key: UniqueKey) {\n  return (): S => store.get(key);\n}\n","import { useEffect, useLayoutEffect } from 'react'\n\nexport const useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n    ? useLayoutEffect\n    : useEffect\n","import { useCallback, useDebugValue, useState } from 'react';\nimport type { UniqueKey, SetReStateAction } from '../core/types';\nimport { store } from './store';\nimport type { DispatchReState } from './types';\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect';\n\nexport function useReState<S>(\n  key: UniqueKey,\n  initialValue?: SetReStateAction<S>\n): [S, DispatchReState<SetReStateAction<S>>] {\n  const makeState = useCallback(\n    (value: SetReStateAction<S>): S => {\n      if (store.has(key)) {\n        return store.get<S>(key);\n      } else {\n        store.setWithoutNotify<SetReStateAction<S>>(key, value);\n        return store.get<S>(key);\n      }\n    },\n    [key]\n  );\n\n  const setState = useCallback(\n    (newValue: SetReStateAction<S>) => {\n      store.set<SetReStateAction<S>>(key, newValue);\n    },\n    [key]\n  );\n\n  const [reStateValue, setReStateValue] = useState<S>(makeState(initialValue));\n\n  useDebugValue(makeState(initialValue));\n\n  useIsomorphicLayoutEffect(() => {\n    const unSub = store.subscribe(key, () => {\n      setReStateValue(store.get(key));\n    });\n\n    return unSub;\n  }, [initialValue, key]);\n\n  return [reStateValue, setState];\n}\n\nuseReState.displayName = 'useReState';\n","import type { SetReStateAction, UniqueKey } from '../core/types';\nimport { store } from './store';\nimport type { DispatchReState } from './types';\nimport { useReState } from './useReState';\n\nexport function createReState<S>(key: UniqueKey, initialValue?: SetReStateAction<S>) {\n  store.setWithoutNotify(key, initialValue);\n  return function useCreatedUseReState(): [S, DispatchReState<SetReStateAction<S>>] {\n    return useReState<S>(key);\n  };\n}\n","import type { UniqueKey, SetReStateAction } from '../core/types';\nimport { store } from './store';\n\nexport function createReStateDispatch<S>(key: UniqueKey) {\n  return (value: SetReStateAction<S>) => store.set(key, value);\n}\n","import { useDebugValue, useState } from 'react';\nimport type { UniqueKey } from '../core/types';\nimport { store } from './store';\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect';\n\nexport function createReStateSelect<S>(key: UniqueKey) {\n  return function useReStateSelect() {\n    const [reStateValue, setReStateValue] = useState<S>(store.get(key));\n\n    useDebugValue(reStateValue);\n\n    useIsomorphicLayoutEffect(() => {\n      const unSub = store.subscribe(key, () => {\n        setReStateValue(store.get(key));\n      });\n\n      return unSub;\n    }, [key]);\n\n    return reStateValue;\n  };\n}\n","var hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction is(x: unknown, y: unknown) {\n  if (x === y) {\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\n\nexport function shallowEqual(objA: any, objB: any) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) return false;\n\n  for (let i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i] as string) || !is(objA[keysA[i] as string], objB[keysA[i] as string])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import { SetReStateAction } from '../core';\nimport { createGetReState } from './createGetReState';\nimport { createReState } from './createReState';\nimport { createReStateDispatch } from './createReStateDispatch';\nimport { createReStateSelect } from './createReStateSelect';\nimport { setReStateInitialValue } from './store';\nimport { DispatchReState } from './types';\n\ntype useReState<S extends string, V> = Record<`use${Capitalize<S>}`, () => [V, DispatchReState<SetReStateAction<V>>]>;\ntype useReStateSelect<S extends string, V> = Record<`use${Capitalize<S>}Select`, () => V>;\ntype dispatchReState<S extends string, V> = Record<`dispatch${Capitalize<S>}`, DispatchReState<SetReStateAction<V>>>;\ntype getReState<S extends string, V> = Record<`get${Capitalize<S>}`, () => V>;\ntype resetReState<S extends string> = Record<`reset${Capitalize<S>}`, () => void>;\n\ntype ReStateMethods<T extends string, S> = useReState<T, S> &\n  useReStateSelect<T, S> &\n  dispatchReState<T, S> &\n  getReState<T, S> &\n  resetReState<T>;\n\n/**\n * Creates a set of methods to use with React.\n * @param name Unique name of the state\n * @param initialValue initial value of the state\n * @param valueOfReset value to reset when calling resetReState\n * @returns a set of methods to use with React\n */\nexport const createReStateMethods = <S extends string = string, V extends any = any>(\n  name: S,\n  initialValue?: V,\n  valueOfReset?: { value: V }\n): { [K in keyof ReStateMethods<S, V>]: ReStateMethods<S, V>[K] } => {\n  if (!name) throw new Error('Name is required');\n  if (typeof name !== 'string') throw new Error('Name need to be a string');\n\n  const capitalizedName = name.charAt(0).toUpperCase() + name.slice(1);\n\n  const use = createReState<V>(name, initialValue);\n  const useSelect = createReStateSelect<V>(name);\n  const dispatch = createReStateDispatch<V>(name);\n  const get = createGetReState<V>(name);\n  if (valueOfReset) setReStateInitialValue(name, valueOfReset.value);\n\n  const methods = {\n    [`use${capitalizedName}`]: use,\n    [`use${capitalizedName}Select`]: useSelect,\n    [`dispatch${capitalizedName}`]: dispatch,\n    [`get${capitalizedName}`]: get,\n    [`reset${capitalizedName}`]: () => dispatch(valueOfReset?.value ?? initialValue),\n  } as ReStateMethods<S, V>;\n\n  return methods;\n};\n","import { FnVoid, UniqueKey } from '../core';\nimport { store } from './store';\n\nexport const onReStateChange = (callback: FnVoid, dependencies: UniqueKey[]) => {\n  dependencies.forEach((dependency) => store.subscribe(dependency, callback));\n};\n","import { useDebugValue, useState } from 'react';\nimport { shallowEqual } from './utils';\nimport { store } from './store';\nimport type { Selector } from './types';\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect';\n\nexport function useReStateSelector<T, S = T>(selector: Selector<T, S>, isEquals = shallowEqual): S {\n  const [selectorValue, setSelectorValue] = useState<S>(store.getMany(selector));\n\n  useDebugValue(selectorValue);\n\n  useIsomorphicLayoutEffect(() => {\n    const unSub = store.subscribeSelector((prevStore: T, newStore: T) => {\n      const prevSelection = selector(prevStore);\n      const newSelection = selector(newStore);\n      if (!isEquals(prevSelection, newSelection)) {\n        setSelectorValue(newSelection);\n      }\n    });\n\n    return unSub;\n  }, [selector]);\n\n  return selectorValue;\n}\n"],"names":["batch","callback","getBatch","_arrayLikeToArray","arr","len","length","i","arr2","Array","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","call","next","bind","isArray","minLen","arrayLikeToArray","n","Object","prototype","toString","slice","constructor","name","from","test","unsupportedIterableToArray","done","value","TypeError","Listener","_listeners","subscribe","listener","push","index","_this","indexOf","notify","prevStore","newStore","this","Observer","Map","key","has","listeners","get","set","listenersCopy","_extends","assign","target","arguments","source","hasOwnProperty","apply","Store","__store","__initial_store","__observer","__listener","convertStoreToObject","receivedStore","fromEntries","entries","getStoreKeys","store","keys","getMany","fn","_set","newValue","hasKey","setInitialValue","notifySelectors","setWithoutNotify","subscribeSelector","reset","forEach","_this2","undefined","setReStateInitialValue","createGetReState","useIsomorphicLayoutEffect","window","document","createElement","useLayoutEffect","useEffect","useReState","initialValue","makeState","useCallback","setState","useState","reStateValue","setReStateValue","useDebugValue","createReState","createReStateDispatch","createReStateSelect","displayName","is","x","y","shallowEqual","objA","objB","keysA","keysB","valueOfReset","Error","capitalizedName","charAt","toUpperCase","use","useSelect","dispatch","dependencies","dependency","selector","isEquals","selectorValue","setSelectorValue","prevSelection","newSelection"],"mappings":"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"}